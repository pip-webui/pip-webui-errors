{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/error_pages/ErrorPageConfig.ts","src/error_pages/ErrorPageConfigService.ts","src/form_errors/ClearErrorsDirective.ts","src/form_errors/FormErrorsService.ts","src/http_intercept/HttpResponseInterceptor.ts","src/index.ts","src/maintenance/MaintenanceErrorPage.ts","src/missing_route/MissingRouteErrorPage.ts","src/no_connection/NoConnectionErrorPage.ts","src/no_connection_panel/NoConnectionPanel.ts","src/unknown/UnknownErrorPage.ts","src/unsupported/UnsupportedErrorPage.ts","temp/pip-webui-errors-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","errors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","filterTranslate","$injector","has","get","key","pipTranslate","translate","$inject","filter","Object","defineProperty","value","ErrorPageConfig","ErrorPageConfigs","Maintenance","Active","Name","Event","Title","SubTitle","Breadcrumb","Image","MissingRoute","NoConnection","Unknown","Unsupported","edge","ie","firefox","opera","chrome","ErrorPageConfig_1","ErrorPageConfigService","config","_config","prototype","enumerable","configurable","getErrorPageConfig","pageName","ErrorPageConfigProvider","configs","setErrorPageConfig","_","defaultsDeep","setAllErrorPageConfigs","$get","_service","5","ClearErrorsLink","$scope","$element","$attrs","$ctrls","_this","_fieldController","_formController","$watch","newValue","clearFieldErrors","clearFormErrors","$error","prop","hasOwnProperty","substring","$setValidity","$serverError","clearErrorsDirective","restrict","link","6","FormErrorsService","$rootScope","errorsWithHint","field","isEmpty","hint","touchedErrorsWithHint","form","$submitted","$touched","$dirty","result","resetFormErrors","$setPristine","$setUntouched","$setDirty","$setSubmitted","resetFieldsErrors","setFormError","error","errorFieldMap","data","status","errorName","message","goToUnhandledErrorPage","name","$emit","angular","service","HttpResponseInterceptor","$q","$location","responseError","rejection","params","console","reject","configureHttpInterceptor","$stateProvider","$httpProvider","interceptors","push","__export","m","p","./maintenance/MaintenanceErrorPage","./missing_route/MissingRouteErrorPage","./no_connection/NoConnectionErrorPage","./unknown/UnknownErrorPage","./unsupported/UnsupportedErrorPage","9","configureMaintenanceErrorPageRoute","state","url","controller","MaintenanceErrorPageController","controllerAs","templateUrl","initMaintenanceErrorPage","$state","pipErrorPageConfigService","$on","event","go","setMaintenanceErrorPageResources","translations","ERROR_MAINTENANCE_SUBTITLE","ERROR_MAINTENANCE_CLOSE","ERROR_MAINTENANCE_TRY_AGAIN","MaintenanceError","MaintenanceErrorConfig","MaintenanceErrorParams","interval","$mdMedia","_pageName","isCordova","pipMedia","pipNavService","media","appHeader","timeoutInterval","appbar","addShadow","icon","showMenu","breadcrumb","text","actions","hide","run","10","configureMissingRouteErrorPageRoute","unfoundState","fromState","MissingRouteErrorPageController","initMissingRouteErrorPage","fromParams","preventDefault","to","setMissingRouteErrorPageResources","ERROR_MISSING_ROUTE_TITLE","ERROR_MISSING_ROUTE_SUBTITLE","ERROR_MISSING_ROUTE_CONTINUE","ERROR_MISSING_ROUTE_TRY_AGAIN","ERROR_MISSING_ROUTE_GO_BACK","ERROR_MISSING_ROUTE_PAGE_TITLE","MissingRouteErrorState","href","toParams","absolute","urlBack","onContinue","configureNoConnectionErrorPageRoute","NoConnectionErrorPageController","initNoConnectionErrorPage","setNoConnectionErrorPageResources","ERROR_NO_CONNECTION_SUBTITLE","ERROR_NO_CONNECTION_RETRY","ERROR_NO_CONNECTION_TITLE","NoConnectionError","$window","errorConfig","onRetry","history","back","NoConnectionPanelController","_retry","isFunction","directive","scope","retry","configureUnknownErrorPageRoute","UnknownErrorPageController","initUnknownErrorPage","setUnknownErrorPageResources","ERROR_UNKNOWN_TITLE","ERROR_UNKNOWN_SUBTITLE","ERROR_UNKNOWN_CLOSE","ERROR_UNKNOWN_DETAILS","UnknownErrorDetails","showError","parseError","error_details","server_stacktrace","client_stacktrace","onDetails","14","configureUnsupportedErrorPageRoute","UnsupportedErrorPageController","initUnsupportedErrorPage","pipSystemInfo","supportedVersions","browser","browserName","version","browserVersion","split","setUnsupportedErrorPageResources","ERROR_UNSUPPORTED_TITLE","ERROR_UNSUPPORTED_SUBTITLE","ERROR_UNSUPPORTED_GC","ERROR_UNSUPPORTED_FM","ERROR_UNSUPPORTED_FM_VER","ERROR_UNSUPPORTED_O","ERROR_UNSUPPORTED_O_VER","ERROR_UNSUPPORTED_IE","ERROR_UNSUPPORTED_IE_VER","ERROR_UNSUPPORTED_GC_VER","UnsupportedError","pipErrorsService","15","$templateCache","put"],"mappings":"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","file":"pip-webui-errors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(() => {\r\n\r\n    function filterTranslate($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate')\r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key) => {\r\n            return pipTranslate ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular.module('pipErrors.Translate', [])\r\n        .filter('translate', filterTranslate);\r\n\r\n})();\r\n","\r\nexport class ErrorPageConfig {\r\n    Active: boolean;\r\n    Name: string;\r\n    Event: string;\r\n    Title: string;\r\n    SubTitle: String;\r\n    Breadcrumb: string;\r\n    Image: string;\r\n    Params?: any;\r\n}\r\n\r\nexport class ErrorPageConfigs {\r\n\r\n    Maintenance: ErrorPageConfig = {\r\n        Active: true,\r\n        Name: 'errors_maintenance',\r\n        Event: 'pipMaintenanceError',\r\n        Title: 'ERROR_MAINTENANCE_TITLE',\r\n        SubTitle: 'ERROR_MAINTENANCE_SUBTITLE',\r\n        Breadcrumb: 'ERROR_MAINTENANCE_TITLE',\r\n        Image: 'images/maintenance.svg'\r\n        \r\n    };\r\n\r\n    MissingRoute: ErrorPageConfig = {\r\n        Active: true,\r\n        Name: 'errors_missing_route',\r\n        Event: '$stateNotFound',\r\n        Title: 'ERROR_MISSING_ROUTE_TITLE',\r\n        SubTitle: 'ERROR_MISSING_ROUTE_SUBTITLE',\r\n        Breadcrumb: 'ERROR_MISSING_ROUTE_PAGE_TITLE',\r\n        Image: 'images/invalid_route.svg'\r\n    };\r\n\r\n    NoConnection: ErrorPageConfig = {\r\n        Active: true,\r\n        Name: 'errors_no_connection',\r\n        Event: 'pipNoConnectionError',\r\n        Title: 'ERROR_NO_CONNECTION_TITLE',\r\n        SubTitle: 'ERROR_NO_CONNECTION_SUBTITLE',\r\n        Breadcrumb: 'ERROR_NO_CONNECTION_TITLE',\r\n        Image: 'images/no_response.svg'\r\n    };\r\n\r\n    Unknown: ErrorPageConfig = {\r\n        Active: true,\r\n        Name: 'errors_unknown',\r\n        Event: 'pipUnknownError',\r\n        Title: 'ERROR_UNKNOWN_TITLE',\r\n        SubTitle: 'ERROR_UNKNOWN_SUBTITLE',\r\n        Breadcrumb: 'ERROR_UNKNOWN_TITLE',\r\n        Image: 'images/unknown_error.svg'\r\n    };\r\n\r\n    Unsupported: ErrorPageConfig = {\r\n        Active: true,\r\n        Name: 'errors_unsupported',\r\n        Event: '',\r\n        Title: 'ERROR_UNSUPPORTED_TITLE',\r\n        SubTitle: 'ERROR_UNSUPPORTED_SUBTITLE',\r\n        Breadcrumb: 'ERROR_UNSUPPORTED_TITLE',\r\n        Image: '',\r\n        Params: {\r\n            supported: {\r\n                edge: 11,\r\n                ie: 11,\r\n                firefox: 43, \r\n                opera: 35,\r\n                chrome: 47\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IErrorPageConfigService, IErrorPageConfigProvider } from './IErrorPageConfigService';\r\nimport { ErrorPageConfigs, ErrorPageConfig } from './ErrorPageConfig';\r\n\r\nclass ErrorPageConfigService implements IErrorPageConfigService {\r\n    private _config: ErrorPageConfigs;\r\n\r\n    public constructor(\r\n        config: ErrorPageConfigs\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._config = config || new ErrorPageConfigs();\r\n    }\r\n\r\n    public get configs(): ErrorPageConfigs {\r\n        return this._config;\r\n    }\r\n\r\n    public getErrorPageConfig(pageName: string): ErrorPageConfig {\r\n        if (!pageName || !this._config[pageName]) {\r\n            return null;\r\n        }\r\n\r\n        return this._config[pageName];\r\n    }\r\n\r\n}\r\n\r\nclass ErrorPageConfigProvider implements IErrorPageConfigProvider {\r\n    private _service: ErrorPageConfigService;\r\n    public configs: ErrorPageConfigs;\r\n\r\n    constructor() {\r\n        this.configs = new ErrorPageConfigs();\r\n    }\r\n\r\n    public setErrorPageConfig(pageName: string, config: ErrorPageConfig): void {\r\n        if (!pageName || !config) return;\r\n        if (!this.configs[pageName]) return;\r\n\r\n        this.configs[pageName] = <ErrorPageConfig>_.defaultsDeep(config, this.configs[pageName]);\r\n    }\r\n\r\n    public setAllErrorPageConfigs(configs: ErrorPageConfigs): void {\r\n        if (!configs) return;\r\n\r\n        this.configs = <ErrorPageConfigs>_.defaultsDeep(configs, this.configs);\r\n    }\r\n\r\n    public $get(): ErrorPageConfigService {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null) {\r\n            this._service = new ErrorPageConfigService(this.configs);\r\n        }\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\n(() => {\r\n    angular\r\n        .module('pipErrorPageConfigService', [])\r\n        .provider('pipErrorPageConfigService', ErrorPageConfigProvider);\r\n\r\n})();\r\n","class ClearErrorsLink {\r\n    private _fieldController: any;\r\n    private _formController: any;\r\n\r\n    constructor(\r\n        $scope: ng.IScope,\r\n        $element: ng.IRootElementService,\r\n        $attrs: ng.IAttributes,\r\n        $ctrls\r\n    ) {\r\n        this._fieldController = $ctrls[0];\r\n        this._formController = $ctrls[1];\r\n\r\n        $scope.$watch($attrs['ngModel'], (newValue) => {\r\n            this.clearFieldErrors();\r\n            this.clearFormErrors();\r\n        });\r\n    }\r\n\r\n    private clearFieldErrors() {\r\n        let errors = this._fieldController.$error;\r\n\r\n        for (let prop in errors) {\r\n            if (errors.hasOwnProperty(prop) && prop.substring(0, 6) == 'ERROR_') {\r\n                this._fieldController.$setValidity(prop, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearFormErrors() {\r\n        this._formController.$serverError = {};\r\n    }\r\n}\r\n\r\n(() => {\r\n    function clearErrorsDirective() {\r\n        return {\r\n            restrict: 'A',\r\n            require: ['ngModel', '^?form'],\r\n            link: ClearErrorsLink\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipClearErrors', [])\r\n        .directive('pipClearErrors', clearErrorsDirective);\r\n})();","\r\n// Todo: Define service interface\r\nclass FormErrorsService {\r\n\r\n    constructor(private $rootScope: ng.IRootScopeService) { }\r\n\r\n    public errorsWithHint(field) {\r\n        if (field == null) return;\r\n\r\n        return _.isEmpty(field.$error) ? { hint: true } : field.$error;\r\n    };\r\n\r\n    public touchedErrorsWithHint(form: ng.IFormController, field) {\r\n        if (form == null) return;\r\n        if (field == null) return;\r\n\r\n        if (form.$submitted && (field.$touched || form.$dirty) || !form.$submitted && (field.$touched || field.$dirty)) {\r\n            let result = _.isEmpty(field.$error) ? { hint: true } : field.$error;\r\n            return result;\r\n        }\r\n        return { hint: true };\r\n    }\r\n\r\n    public resetFormErrors(form: ng.IFormController, errors?: boolean): void {\r\n        form.$setPristine();\r\n        form.$setUntouched();\r\n\r\n        if (errors) {\r\n            form.$setDirty();\r\n            form.$setSubmitted();\r\n        }\r\n\r\n        form['$serverError'] = {};\r\n    }\r\n\r\n    public resetFieldsErrors(form: ng.IFormController, field) {\r\n        if (!form) return;\r\n        if (field && form[field] && form[field].$error) {\r\n            form[field].$error = {};\r\n        } else {\r\n            for (let prop in form) {\r\n                if (form[prop] && form[prop].$error) {\r\n                    form[prop].$error = {};\r\n                }\r\n            }\r\n            if (form && form.$error) {\r\n                form.$error = {};\r\n            }\r\n        }\r\n    }\r\n\r\n    public setFormError(form: ng.IFormController, error, errorFieldMap) {\r\n        if (error == null) return;\r\n        // Prepare form server errors\r\n        form['$serverError'] = form['$serverError'] || {};\r\n        // Prepare error code\r\n        let code: string = error.code || (error.data || {}).code || null;\r\n        if (!code && error.status) code = error.status;\r\n\r\n        if (code) {\r\n            let errorName = 'ERROR_' + code,\r\n                field = errorFieldMap ? errorFieldMap[code] : null;\r\n            // Set server error to fields\r\n            if (field && form[field] && form[field].$setValidity) {\r\n                form[field].$setValidity(errorName, false);\r\n                return;\r\n            }\r\n\r\n            // Set server error to form\r\n            if (field == 'form') {\r\n                form['$serverError'][errorName] = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        // if undefined error for this form or code === undefined/null, go to unhandled error page\r\n        if (error.data && error.data.message) {\r\n            form['$serverError']['ERROR_UNKNOWN'] = error.data.message;\r\n            this.goToUnhandledErrorPage(error);\r\n            return;\r\n        }\r\n\r\n        // Set as undefined error\r\n        if (error.message) {\r\n            form['$serverError']['ERROR_UNKNOWN'] = error.message;\r\n            this.goToUnhandledErrorPage(error);\r\n            return;\r\n        }\r\n\r\n        if (error.name) {\r\n            form['$serverError']['ERROR_UNKNOWN'] = error.name;\r\n            this.goToUnhandledErrorPage(error);\r\n            return;\r\n        }\r\n\r\n\r\n        form['$serverError']['ERROR_UNKNOWN'] = error;\r\n        this.goToUnhandledErrorPage(error);\r\n    }\r\n\r\n    private goToUnhandledErrorPage(error) {\r\n        this.$rootScope.$emit('pipUnhandledInternalError', {\r\n            error: error\r\n        });\r\n    }\r\n}\r\n\r\n(() => {\r\n    \r\n    angular\r\n        .module('pipFormErrors', [])\r\n        .service('pipFormErrors', FormErrorsService);\r\n\r\n})();","\r\ninterface IHttpResponseInterceptor {\r\n    responseError(rejection);\r\n}\r\n\r\nclass HttpResponseInterceptor implements IHttpResponseInterceptor{\r\n    constructor(\r\n        private $q: ng.IQService, \r\n        private $location: ng.ILocationService, \r\n        private $rootScope: ng.IRootScopeService) {}\r\n    public responseError(rejection) {\r\n        // Todo: Check pip-webui-services - we have a different way to define prev and current states now\r\n        let toState: string = this.$rootScope['$state'] && this.$rootScope['$state'].name ? this.$rootScope['$state'].name : null,\r\n            toParams = this.$rootScope['$state'] && this.$rootScope['$state'].params ? this.$rootScope['$state'].params : null;\r\n\r\n        switch (rejection.status) {\r\n            case 503:\r\n                //available (maintenance)\r\n                this.$rootScope.$emit('pipMaintenanceError', { error: rejection });\r\n                break;\r\n            case -1:\r\n                this.$rootScope.$emit('pipNoConnectionError', { error: rejection });\r\n                break;\r\n            default:\r\n                console.error(\"errors_unknown\", rejection);\r\n                break;\r\n        }\r\n\r\n        return this.$q.reject(rejection);\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n\r\n    function configureHttpInterceptor(\r\n        $stateProvider: ng.ui.IStateProvider, \r\n        $httpProvider: ng.IHttpProvider\r\n    ) {\r\n        // Attach interceptor to react on unauthorized errors\r\n        $httpProvider.interceptors.push('pipHttpResponseInterceptor');\r\n    }\r\n\r\n    angular\r\n        .module('pipErrors.Pages', [])\r\n        .config(configureHttpInterceptor)\r\n        .service('pipHttpResponseInterceptor', HttpResponseInterceptor);\r\n\r\n})();\r\n\r\n","﻿/*angular\r\n    .module('pipErrors.Pages', [\r\n        'ngMaterial'\r\n    ]);\r\n*/\r\nimport './maintenance/MaintenanceErrorPage';\r\nimport './missing_route/MissingRouteErrorPage';\r\nimport './no_connection/NoConnectionErrorPage';\r\nimport './unknown/UnknownErrorPage';\r\nimport './unsupported/UnsupportedErrorPage';\r\n\r\nangular\r\n    .module('pipErrors', [\r\n        'pipErrors.Templates',\r\n        'pipErrors.Pages',\r\n        'pipErrorPageConfigService',\r\n        'pipNoConnectionPanel',\r\n        'pipClearErrors',\r\n        'pipFormErrors'\r\n    ]);\r\n\r\nexport * from './error_pages/ErrorPageConfig';\r\nexport * from './error_pages/IErrorPageConfigService';","\r\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\r\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\r\n\r\nclass MaintenanceError {\r\n    config?: MaintenanceErrorConfig;\r\n}\r\n\r\nclass MaintenanceErrorConfig {\r\n    params?: MaintenanceErrorParams;\r\n}\r\n\r\nclass MaintenanceErrorParams {\r\n    interval?: number = 0;\r\n}\r\n\r\nclass MaintenanceErrorPageController {\r\n    private _pageName: string = 'Maintenance';\r\n    private pipNavService;\r\n\r\n    public config: ErrorPageConfig;\r\n    public isCordova: boolean = false;\r\n    public media;\r\n    public error: MaintenanceError;\r\n    public timeoutInterval: number;\r\n\r\n    constructor(\r\n        $scope: ng.IScope,\r\n        $state: ng.ui.IStateService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia,\r\n        $injector: angular.auto.IInjectorService,\r\n        pipErrorPageConfigService: IErrorPageConfigService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this.config = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\r\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\r\n\r\n        this.media = pipMedia ? pipMedia : $mdMedia;\r\n\r\n        $rootScope['$routing'] = false;\r\n        this.appHeader();\r\n\r\n        this.error = $state && $state.params && $state.params['error'] ? $state.params['error'] : {};\r\n        this.timeoutInterval = this.error && this.error.config &&\r\n            this.error.config.params && this.error.config.params.interval ? this.error.config.params.interval : 0;\r\n\r\n    }\r\n\r\n    private appHeader(): void {\r\n        if (!this.pipNavService) return;\r\n\r\n        this.pipNavService.appbar.addShadow();\r\n        this.pipNavService.icon.showMenu();\r\n        this.pipNavService.breadcrumb.text = this.config.Breadcrumb;\r\n        this.pipNavService.actions.hide();\r\n    }\r\n}\r\n\r\nfunction configureMaintenanceErrorPageRoute(\r\n    $stateProvider: ng.ui.IStateProvider\r\n) {\r\n    \"ngInject\";\r\n\r\n    $stateProvider\r\n            .state('errors_maintenance', {\r\n                url: '/errors/maintenance',\r\n                params: {\r\n                    error: null\r\n                },\r\n                controller: MaintenanceErrorPageController,\r\n                controllerAs: '$ctrl',\r\n                templateUrl: 'maintenance/MaintenanceErrorPage.html'\r\n            });\r\n}\r\n\r\nfunction initMaintenanceErrorPage(\r\n    $rootScope: ng.IRootScopeService, \r\n    $state: ng.ui.IStateService, \r\n    pipErrorPageConfigService: IErrorPageConfigService\r\n) {\r\n    \"ngInject\";\r\n\r\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\r\n\r\n    if (!config.Maintenance.Active) return;\r\n\r\n    $rootScope.$on('pipMaintenanceError',\r\n    (event: angular.IAngularEvent, params) => { \r\n        this.$state.go('errors_maintenance', params);\r\n    });\r\n}\r\n\r\nfunction setMaintenanceErrorPageResources($injector: angular.auto.IInjectorService) {\r\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n    if (pipTranslate == null) return;\r\n\r\n    // Set translation strings for the module\r\n    pipTranslate.translations('en', {\r\n        'ERROR_MAINTENANCE_TITLE': 'The server is on maintenance',\r\n        'ERROR_MAINTENANCE_SUBTITLE': 'Sorry for the inconvenience. This application is undergoing maintenance for ' +\r\n        'a short period. We\\'ll be back soon. Thank for your patience.',\r\n        'ERROR_MAINTENANCE_CLOSE': 'Close',\r\n        'ERROR_MAINTENANCE_TRY_AGAIN': 'Try after'\r\n    });\r\n\r\n    pipTranslate.translations('ru', {\r\n        'ERROR_MAINTENANCE_TITLE': 'The server is on maintenance',\r\n        'ERROR_MAINTENANCE_SUBTITLE': 'Sorry for the inconvenience. This application is undergoing maintenance for ' +\r\n        'a short period. We\\'ll be back soon. Thank for your patience.',\r\n        'ERROR_MAINTENANCE_CLOSE': 'Close',\r\n        'ERROR_MAINTENANCE_TRY_AGAIN': 'Try after'\r\n    });\r\n}\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipErrors.Maintenance', [])\r\n        .config(configureMaintenanceErrorPageRoute)\r\n        .run(initMaintenanceErrorPage)\r\n        .run(setMaintenanceErrorPageResources);\r\n\r\n})();\r\n","import { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\r\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\r\n\r\nclass MissingRouteErrorState {\r\n   to: string;\r\n   toParams: any;\r\n   fromParams: any;\r\n}\r\n\r\nclass MissingRouteErrorPageController {\r\n    private _pageName: string = 'MissingRoute';\r\n    private pipNavService;\r\n\r\n    public config: ErrorPageConfig;\r\n    public isCordova: boolean = false;\r\n    public media;\r\n    public fromState: MissingRouteErrorState;\r\n    public unfoundState: MissingRouteErrorState;\r\n    public url: string;\r\n    public urlBack: string;\r\n\r\n    constructor(\r\n        $scope: ng.IScope,\r\n        $state: ng.ui.IStateService, \r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia, \r\n        $injector: angular.auto.IInjectorService, \r\n        pipErrorPageConfigService: IErrorPageConfigService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this.config = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\r\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\r\n\r\n        this.media = pipMedia ? pipMedia : $mdMedia;\r\n\r\n        $rootScope['$routing'] = false;\r\n        this.appHeader();\r\n\r\n        this.fromState = $state && $state.params && $state.params['fromState'] ?  $state.params['fromState'] : {};\r\n        this.unfoundState = $state && $state.params ?  $state.params['unfoundState'] : {};\r\n        this.url = this.unfoundState && this.unfoundState.to ? $state.href(this.unfoundState.to, this.unfoundState.toParams, {absolute: true}) : '';\r\n        this.urlBack = this.fromState && this.fromState.to ? $state.href(this.fromState.to, this.fromState.fromParams, {absolute: true}) : '';\r\n\r\n    }\r\n\r\n    private appHeader(): void {\r\n        if (!this.pipNavService) return;\r\n\r\n        this.pipNavService.appbar.addShadow();\r\n        this.pipNavService.icon.showMenu();\r\n        this.pipNavService.breadcrumb.text = this.config.Breadcrumb;\r\n        this.pipNavService.actions.hide();\r\n    }\r\n\r\n    public onContinue() {\r\n            // Todo: Go to default state '/'\r\n            //pipAuthState.goToAuthorized();\r\n    }\r\n}\r\n\r\nfunction configureMissingRouteErrorPageRoute(\r\n    $stateProvider: ng.ui.IStateProvider\r\n) {\r\n    \"ngInject\";\r\n    $stateProvider\r\n            .state('errors_missing_route', {\r\n                url: '/errors/missing_route',\r\n                params: {\r\n                    unfoundState: null,\r\n                    fromState: null\r\n                },\r\n                controller: MissingRouteErrorPageController,\r\n                controllerAs: '$ctrl',\r\n                templateUrl: 'missing_route/MissingRouteErrorPage.html'\r\n            });\r\n}\r\n\r\n\r\nfunction initMissingRouteErrorPage(\r\n    $rootScope: ng.IRootScopeService, \r\n    $state: ng.ui.IStateService, \r\n    $injector: angular.auto.IInjectorService, \r\n    pipErrorPageConfigService: IErrorPageConfigService\r\n) {\r\n    \"ngInject\";\r\n\r\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\r\n\r\n    if (!config.MissingRoute.Active) return;\r\n\r\n    $rootScope.$on('$stateNotFound',\r\n        (\r\n            event: angular.IAngularEvent, \r\n            unfoundState: ng.ui.IState, \r\n            fromState: ng.ui.IState, \r\n            fromParams: any) => {\r\n            event.preventDefault();\r\n\r\n            $state.go('errors_missing_route', {\r\n                unfoundState: unfoundState,\r\n                fromState: {\r\n                    to: fromState ? fromState.name : '',\r\n                    fromParams: fromParams\r\n                }\r\n            }\r\n            );\r\n            $rootScope['$routing'] = false;\r\n        }\r\n    );\r\n}\r\n\r\nfunction setMissingRouteErrorPageResources($injector: angular.auto.IInjectorService) {\r\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n    if (pipTranslate == null) return;\r\n\r\n    // Set translation strings for the module\r\n    pipTranslate.translations('en', {\r\n        'ERROR_MISSING_ROUTE_TITLE': 'Sorry, the page isn\\'t available',\r\n        'ERROR_MISSING_ROUTE_SUBTITLE': 'The link you followed may be broken, or the page may have been removed.',\r\n        'ERROR_MISSING_ROUTE_CONTINUE': 'Continue',\r\n        'ERROR_MISSING_ROUTE_TRY_AGAIN': 'Try again',\r\n        'ERROR_MISSING_ROUTE_GO_BACK': 'Go Back',\r\n        'ERROR_MISSING_ROUTE_PAGE_TITLE': 'Wrong page'\r\n    });\r\n\r\n    pipTranslate.translations('ru', {\r\n        'ERROR_MISSING_ROUTE_TITLE': 'Sorry, the page isn\\'t available',\r\n        'ERROR_MISSING_ROUTE_SUBTITLE': 'The link you followed may be broken, or the page may have been removed.',\r\n        'ERROR_MISSING_ROUTE_CONTINUE': 'Continue',\r\n        'ERROR_MISSING_ROUTE_TRY_AGAIN': 'Try again',\r\n        'ERROR_MISSING_ROUTE_GO_BACK': 'Go Back',\r\n        'ERROR_MISSING_ROUTE_PAGE_TITLE': 'Wrong page'\r\n    });\r\n}\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipErrors.MissingRoute', [])\r\n        .config(configureMissingRouteErrorPageRoute)\r\n        .run(initMissingRouteErrorPage)\r\n        .run(setMissingRouteErrorPageResources);\r\n\r\n})();\r\n","\r\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\r\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\r\n\r\nexport class NoConnectionError {\r\n    config?: any;\r\n}\r\n\r\nexport class NoConnectionErrorPageController {\r\n    private _pageName: string = 'NoConnection';\r\n    private pipNavService;\r\n\r\n    public errorConfig: ErrorPageConfig;\r\n    public isCordova: boolean = false;\r\n    public media;\r\n    public error: NoConnectionError;\r\n\r\n    constructor(\r\n        private $window: ng.IWindowService,\r\n        $scope: ng.IScope,\r\n        $state: ng.ui.IStateService, \r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia, \r\n        $injector: angular.auto.IInjectorService, \r\n        pipErrorPageConfigService: IErrorPageConfigService\r\n    ) {\r\n        \"ngInject\";\r\n        \r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this.errorConfig = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\r\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\r\n\r\n        this.media = pipMedia ? pipMedia : $mdMedia;\r\n\r\n        $rootScope['$routing'] = false;\r\n        this.appHeader();\r\n\r\n        this.error = $state && $state.params && $state.params['error'] ?  $state.params['error'] : {};\r\n\r\n    }\r\n\r\n    private appHeader(): void {\r\n        if (!this.pipNavService) return;\r\n\r\n        this.pipNavService.appbar.addShadow();\r\n        this.pipNavService.icon.showMenu();\r\n        this.pipNavService.breadcrumb.text = this.errorConfig.Breadcrumb;\r\n        this.pipNavService.actions.hide();\r\n    }\r\n\r\n    public onRetry() {\r\n        this.$window.history.back();\r\n    }\r\n}\r\n\r\nfunction configureNoConnectionErrorPageRoute(\r\n    $injector: angular.auto.IInjectorService, \r\n    $stateProvider: ng.ui.IStateProvider\r\n) {\r\n    \"ngInject\";\r\n\r\n    $stateProvider\r\n            .state('errors_no_connection', {\r\n                url: '/errors/no_connection',\r\n                params: {\r\n                    error: null\r\n                },\r\n                controller: NoConnectionErrorPageController,\r\n                    controllerAs: '$ctrl',\r\n                templateUrl: 'no_connection/NoConnectionErrorPage.html'\r\n            });\r\n}\r\n\r\nfunction initNoConnectionErrorPage(\r\n    $rootScope: ng.IRootScopeService, \r\n    $state: ng.ui.IStateService, \r\n    pipErrorPageConfigService: IErrorPageConfigService\r\n) {\r\n    \"ngInject\";\r\n\r\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\r\n\r\n    if (!config.NoConnection.Active) return;\r\n\r\n\r\n    $rootScope.$on('pipNoConnectionError', \r\n    (event: angular.IAngularEvent, params) => { \r\n        this.$state.go('errors_no_connection', params);\r\n    });\r\n}\r\n\r\nfunction setNoConnectionErrorPageResources($injector: angular.auto.IInjectorService) {\r\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n    if (pipTranslate == null) return;\r\n\r\n    // Set translation strings for the module\r\n    pipTranslate.translations('en', {\r\n        'ERROR_NO_CONNECTION_TITLE': 'No connection to the server',\r\n        'ERROR_NO_CONNECTION_SUBTITLE': 'Unable to connect to the server. Check your Internet connection and try again.',\r\n        'ERROR_NO_CONNECTION_RETRY': 'Retry',\r\n    });\r\n\r\n    pipTranslate.translations('ru', {\r\n        'ERROR_NO_CONNECTION_TITLE': 'No connection to the server',\r\n        'ERROR_NO_CONNECTION_SUBTITLE': 'Unable to connect to server. Check your Internet connection and try again.',\r\n        'ERROR_NO_CONNECTION_RETRY': 'Retry',\r\n    });\r\n}\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipErrors.NoConnection', [])\r\n        .config(configureNoConnectionErrorPageRoute)\r\n        .run(initNoConnectionErrorPage)\r\n        .run(setNoConnectionErrorPageResources);\r\n\r\n})();\r\n","\r\nclass NoConnectionPanelController {\r\n    private _retry: Function;\r\n    constructor($scope: ng.IScope) {\r\n        this._retry = $scope['retry'];\r\n    }\r\n\r\n    public onRetry() {\r\n        if (this._retry && angular.isFunction(this._retry)) this._retry();\r\n    }\r\n}\r\n\r\n(() => {\r\n    angular\r\n        .module(\"pipNoConnectionPanel\", ['pipErrors.Translate'])\r\n        .directive('pipNoConnectionPanel',\r\n        () => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    error: '=pipError',\r\n                    retry: '=pipRetry'\r\n                },\r\n                templateUrl: 'no_connection_panel/NoConnectionPanel.html',\r\n                controller: 'pipNoConnectionPanelController',\r\n                controllerAs: '$ctrl'\r\n            };\r\n        }\r\n        ).controller('pipNoConnectionPanelController', NoConnectionPanelController);\r\n\r\n})();\r\n\r\n","\r\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\r\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\r\n\r\nexport class UnknownErrorDetails {\r\n    code: number;\r\n    message: string;\r\n    status: string;\r\n    server_stacktrace: Function;\r\n    client_stacktrace: Function;\r\n}\r\n\r\nexport class UnknownErrorPageController {\r\n    private _pageName: string = 'Unknown';\r\n    private pipNavService;\r\n\r\n    public config: ErrorPageConfig;\r\n    public isCordova: boolean = false;\r\n    public media;\r\n    public error: UnknownErrorDetails;\r\n    public error_details: UnknownErrorDetails;\r\n    public showError: boolean;\r\n\r\n    constructor(\r\n        $scope: ng.IScope,\r\n        $state: ng.ui.IStateService, \r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia, \r\n        $injector: angular.auto.IInjectorService, \r\n        pipErrorPageConfigService: IErrorPageConfigService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this.config = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\r\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\r\n\r\n        this.media = pipMedia ? pipMedia : $mdMedia;\r\n\r\n        $rootScope['$routing'] = false;\r\n        this.showError = $scope['showError'];\r\n        this.appHeader();\r\n\r\n        this.error = $state && $state.params && $state.params['error'] ?  $state.params['error'] : {};\r\n        \r\n        this.parseError();\r\n\r\n    }\r\n\r\n    private appHeader(): void {\r\n        if (!this.pipNavService) return;\r\n\r\n        this.pipNavService.appbar.addShadow();\r\n        this.pipNavService.icon.showMenu();\r\n        this.pipNavService.breadcrumb.text = this.config.Breadcrumb;\r\n        this.pipNavService.actions.hide();\r\n    }\r\n\r\n    private parseError() {\r\n        this.error_details = new UnknownErrorDetails();\r\n        this.error_details.code = this.error.code;\r\n        this.error_details.message = this.error.message;\r\n        this.error_details.status = this.error.status;\r\n\r\n        this.error_details.server_stacktrace = () => {};\r\n\r\n        this.error_details.client_stacktrace = () => {};\r\n    }\r\n\r\n    public onDetails() {\r\n        this.showError = true;\r\n    }\r\n\r\n}\r\n\r\nfunction configureUnknownErrorPageRoute (\r\n    $injector: angular.auto.IInjectorService, \r\n    $stateProvider: ng.ui.IStateProvider\r\n) {\r\n    \"ngInject\";\r\n\r\n    $stateProvider\r\n            .state('errors_unknown', {\r\n                url: '/errors/unknown',\r\n                params: {\r\n                    error: null\r\n                }, \r\n                controllerAs: '$ctrl',\r\n                controller: UnknownErrorPageController,\r\n                templateUrl: 'unknown/UnknownErrorPage.html'\r\n            });\r\n}\r\n\r\nfunction initUnknownErrorPage(\r\n    $rootScope: ng.IRootScopeService, \r\n    $state: ng.ui.IStateService, \r\n    pipErrorPageConfigService: IErrorPageConfigService\r\n) {\r\n    \"ngInject\";\r\n\r\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\r\n\r\n    if (!config.Unknown.Active) return;\r\n\r\n    $rootScope.$on('pipUnknownError',\r\n    (event: angular.IAngularEvent, params) => { \r\n        this.$state.go('errors_unknown', params);\r\n    });\r\n}\r\n\r\nfunction setUnknownErrorPageResources($injector: angular.auto.IInjectorService) {\r\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n    if (pipTranslate == null) return;\r\n\r\n    // Set translation strings for the module\r\n    pipTranslate.translations('en', {\r\n        'ERROR_UNKNOWN_TITLE': 'Oops. Something went wrong',\r\n        'ERROR_UNKNOWN_SUBTITLE': 'Unknown error occurred, but don\\'t worry we already have been notified.',\r\n        'ERROR_UNKNOWN_CLOSE': 'Close',\r\n        'ERROR_UNKNOWN_DETAILS': 'Details',\r\n    });\r\n\r\n    pipTranslate.translations('ru', {\r\n        'ERROR_UNKNOWN_TITLE': 'Oops. Something went wrong',\r\n        'ERROR_UNKNOWN_SUBTITLE': 'Unknown error occurred, but don\\'t worry we already have been notified.',\r\n        'ERROR_UNKNOWN_CLOSE': 'Close',\r\n        'ERROR_UNKNOWN_DETAILS': 'Details',\r\n    });\r\n}\r\n\r\n(() => {\r\n\r\n    angular\r\n        .module('pipErrors.Unknown', [])\r\n        .config(configureUnknownErrorPageRoute)\r\n        .run(initUnknownErrorPage)\r\n        .run(setUnknownErrorPageResources);\r\n\r\n})();\r\n","\r\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\r\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\r\n\r\nexport class UnsupportedError {\r\n    config?: any;\r\n}\r\n\r\nexport class UnsupportedErrorPageController {\r\n    private _pageName: string = 'Unsupported';\r\n    private pipNavService;\r\n\r\n    public errorConfig: ErrorPageConfig;\r\n    public isCordova: boolean = false;\r\n    public media;\r\n    public error: UnsupportedError;\r\n\r\n    constructor(\r\n        $scope: ng.IScope,\r\n        $state: ng.ui.IStateService, \r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia, \r\n        $injector: angular.auto.IInjectorService, \r\n        pipErrorsService: IErrorPageConfigService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this.errorConfig = pipErrorsService.getErrorPageConfig(this._pageName);\r\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\r\n\r\n        this.media = pipMedia ? pipMedia : $mdMedia;\r\n\r\n        $rootScope['$routing'] = false;\r\n        this.appHeader();\r\n\r\n        this.error = $state && $state.params && $state.params['error'] ?  $state.params['error'] : {};\r\n\r\n    }\r\n\r\n    private appHeader(): void {\r\n        if (!this.pipNavService) return;\r\n\r\n        this.pipNavService.appbar.addShadow();\r\n        this.pipNavService.icon.showMenu();\r\n        this.pipNavService.breadcrumb.text = this.errorConfig.Breadcrumb;\r\n        this.pipNavService.actions.hide();\r\n    }\r\n}\r\n\r\nfunction configureUnsupportedErrorPageRoute(\r\n    $stateProvider: ng.ui.IStateProvider\r\n) {\r\n    \"ngInject\";\r\n\r\n    $stateProvider\r\n            .state('errors_unsupported', {\r\n                url: '/errors/unsupported',\r\n                params: {\r\n                    error: null\r\n                },\r\n                controllerAs: '$ctrl',\r\n                controller: UnsupportedErrorPageController,\r\n                templateUrl: 'unsupported/UnsupportedErrorPage.html'\r\n            });\r\n}\r\n\r\nfunction initUnsupportedErrorPage(\r\n    $rootScope: ng.IRootScopeService, \r\n    $state: ng.ui.IStateService, \r\n    $injector: angular.auto.IInjectorService, \r\n    pipErrorPageConfigService: IErrorPageConfigService) {\r\n    \"ngInject\";\r\n\r\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\r\n\r\n    if (!config.Unsupported.Active) return;\r\n\r\n    let pipSystemInfo: any = this.$injector.has('pipSystemInfo') ? this.$injector.get('pipSystemInfo') : null;\r\n    if (!pipSystemInfo) { return; }\r\n\r\n    // Todo: Make it configurable\r\n    let supportedVersions = {\r\n        edge: 11,\r\n        ie: 11,\r\n        firefox: 43, //4, for testing\r\n        opera: 35,\r\n        chrome: 47\r\n    };\r\n\r\n    let browser: string = pipSystemInfo.browserName;\r\n    let version: string = pipSystemInfo.browserVersion;\r\n    version = version.split(\".\")[0]\r\n\r\n    if (browser \r\n        && supportedVersions[browser] \r\n        && version >= supportedVersions[browser]) {\r\n        return;\r\n    }\r\n            // if not supported\r\n    this.$state.go('errors_unsupported');\r\n}\r\n\r\nfunction setUnsupportedErrorPageResources($injector: angular.auto.IInjectorService) {\r\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n    if (pipTranslate == null) return;\r\n\r\n    // Set translation strings for the module\r\n    pipTranslate.translations('en', {\r\n        'ERROR_UNSUPPORTED_TITLE': 'This browser is not supported',\r\n        'ERROR_UNSUPPORTED_SUBTITLE': 'Our application using the latest technology. This makes the application faster ' +\r\n        'and easier to use. Unfortunately, your browser doesn\\'t support those ' +\r\n        'technologies. Download one of these great browsers and you\\'ll be on your way:',\r\n        'ERROR_UNSUPPORTED_O': 'Opera',\r\n        'ERROR_UNSUPPORTED_O_VER': 'Version 36+',\r\n        'ERROR_UNSUPPORTED_IE': 'Internet Explorer',\r\n        'ERROR_UNSUPPORTED_IE_VER': 'Version 11+',\r\n        'ERROR_UNSUPPORTED_GC': 'Google Chrome',\r\n        'ERROR_UNSUPPORTED_GC_VER': 'Version 48+',\r\n        'ERROR_UNSUPPORTED_FM': 'Mozilla Firefox',\r\n        'ERROR_UNSUPPORTED_FM_VER': 'Version 45+'\r\n\r\n    });\r\n\r\n    pipTranslate.translations('ru', {\r\n        'ERROR_UNSUPPORTED_TITLE': 'This browser is not supported',\r\n        'ERROR_UNSUPPORTED_SUBTITLE': 'Our application using the latest technology. This makes the application faster ' +\r\n        'and easier to use. Unfortunately, your browser doesn\\'t support those ' +\r\n        'technologies. Download one of these great browsers and you\\'ll be on your way:',\r\n        'ERROR_UNSUPPORTED_O': 'Opera',\r\n        'ERROR_UNSUPPORTED_O_VER': 'Version 35+',\r\n        'ERROR_UNSUPPORTED_IE': 'Internet Explorer',\r\n        'ERROR_UNSUPPORTED_IE_VER': 'Version 11+',\r\n        'ERROR_UNSUPPORTED_GC': 'Google Chrome',\r\n        'ERROR_UNSUPPORTED_GC_VER': 'Version 47+',\r\n        'ERROR_UNSUPPORTED_FM': 'Mozilla Firefox',\r\n        'ERROR_UNSUPPORTED_FM_VER': 'Version 43+'\r\n\r\n    });\r\n}\r\n\r\n(() => {\r\n    angular\r\n        .module('pipErrors.Unsupported', [])\r\n        .config(configureUnsupportedErrorPageRoute)\r\n        .run(initUnsupportedErrorPage)\r\n        .run(setUnsupportedErrorPageResources);\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('maintenance/MaintenanceErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.errorConfig.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::\\'ERROR_MAINTENANCE_TITLE\\' | translate}}</div><div class=\"pip-error-subtext\">{{::\\'ERROR_MAINTENANCE_SUBTITLE\\' | translate}}</div><div class=\"pip-error-subtext\" ng-if=\"$ctrl.timeoutInterval\">{{::\\'ERROR_MAINTENANCE_TRY_AGAIN\\' | translate}} {{timeoutInterval}} sec.</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\" ng-if=\"$ctrl.isCordova\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onClose($event)\" aria-label=\"CLOSE\">{{::\\'ERROR_MAINTENANCE_CLOSE\\' | translate}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('missing_route/MissingRouteErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.errorConfig.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.errorConfig.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.errorConfig.SubTitle | translate}}</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\"><md-button aria-label=\"CONTINUE\" class=\"md-accent\" ng-click=\"$ctrl.onContinue($event)\">{{::\\'ERROR_MISSING_ROUTE_CONTINUE\\' | translate}}</md-button></div><div class=\"h48\" ng-if=\"url\"><a ng-href=\"{{$ctrl.url}}\">{{::\\'ERROR_MISSING_ROUTE_TRY_AGAIN\\' | translate }}: {{$ctrl.url}}</a></div><div class=\"h48\" ng-if=\"urlBack\"><a ng-href=\"{{$ctrl.urlBack}}\">{{::\\'ERROR_MISSING_ROUTE_GO_BACK\\' | translate }}: {{$ctrl.urlBack}}</a></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('no_connection/NoConnectionErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.errorConfig.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.errorConfig.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.errorConfig.SubTitle | translate}}</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\"><md-button aria-label=\"RETRY\" class=\"md-accent\" ng-click=\"$ctrl.onRetry($event)\">{{::\\'ERROR_NO_CONNECTION_RETRY\\' | translate}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('no_connection_panel/NoConnectionPanel.html',\n    '<div class=\"pip-error-page pip-error layout-column layout-align-center-center flex\"><img src=\"{{$ctrl.errorConfig.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.errorConfig.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.errorConfig.SubTitle | translate}}</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\"><md-button aria-label=\"RETRY\" class=\"md-accent\" ng-click=\"$ctrl.onRetry($event)\">{{::\\'ERROR_NO_CONNECTION_RETRY\\' | translate}}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('unknown/UnknownErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.errorConfig.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.errorConfig.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.errorConfig.SubTitle | translate}}</div><div class=\"pip-error-subtext\" ng-if=\"$ctrl.showError && $ctrl.error_details && $ctrl.error_details.message\"><div ng-if=\"$ctrl.error_details.code\">Code: {{$ctrl.error_details.code}}</div><div ng-if=\"$ctrl.error_details.message\">Description: {{$ctrl.error_details.message}}</div><div ng-if=\"$ctrl.error_details.status\">HTTP status: {{$ctrl.error_details.status}}</div><div ng-if=\"$ctrl.error_details.server_stacktrace\">Server stacktrace: {{$ctrl.error_details.server_stacktrace}}</div><div ng-if=\"$ctrl.error_details.client_stacktrace\">Client stacktrace stacktrace: {{$ctrl.error_details.client_stacktrace}}</div></div><div class=\"pip-error-actions layout-column layout-align-center-center\"><div class=\"h48\" ng-if=\"$ctrl.isCordova\"><md-button aria-label=\"CLOSE\" class=\"md-accent\" ng-click=\"$ctrl.onClose($event)\">{{::\\'ERROR_UNKNOWN_CLOSE\\' | translate}}</md-button></div><div class=\"h48\" ng-if=\"$ctrl.error_details && $ctrl.error_details.status\"><md-button aria-label=\"DETAILS\" class=\"md-accent\" ng-click=\"$ctrl.onDetails($event)\">{{::\\'ERROR_UNKNOWN_DETAILS\\' | translate}}</md-button></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('unsupported/UnsupportedErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><div class=\"pip-error-text\">{{::$ctrl.errorConfig.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.errorConfig.SubTitle | translate}}</div><div class=\"pip-error-details layout-row layout-align-center-center\" ng-if=\"$ctrl.media(\\'gt-xs\\')\"><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/ie.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.microsoft.com/en-us/download/internet-explorer-11-for-windows-7-details.aspx\">{{::\\'ERROR_UNSUPPORTED_IE\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_IE_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/fm.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.mozilla.org/ru/firefox/new/\">{{::\\'ERROR_UNSUPPORTED_FM\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_FM_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/gc.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.google.com/chrome/browser/desktop/index.html?platform=win64#\">{{::\\'ERROR_UNSUPPORTED_GC\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_GC_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/o.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"http://www.opera.com/ru/download\">{{::\\'ERROR_UNSUPPORTED_O\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_O_VER\\' | translate}}</p></div></div></div><div class=\"pip-error-details\" ng-if=\"$ctrl.media(\\'xs\\')\"><div class=\"layout-row layout-align-center-center\"><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/ie.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.microsoft.com/en-us/download/internet-explorer-11-for-windows-7-details.aspx\">{{::\\'ERROR_UNSUPPORTED_IE\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_IE_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/fm.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.mozilla.org/ru/firefox/new/\">{{::\\'ERROR_UNSUPPORTED_FM\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_FM_VER\\' | translate}}</p></div></div></div><div class=\"tm16 layout-row layout-align-center-center\"><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/gc.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.google.com/chrome/browser/desktop/index.html?platform=win64#\">{{::\\'ERROR_UNSUPPORTED_GC\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_GC_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/o.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"http://www.opera.com/ru/download\">{{::\\'ERROR_UNSUPPORTED_O\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_O_VER\\' | translate}}</p></div></div></div></div></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-errors-html.min.js.map\n"]}