{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/error_pages/ErrorPageConfig.ts","src/error_pages/ErrorPageConfigService.ts","src/form_errors/ClearErrorsDirective.ts","src/form_errors/FormErrorsService.ts","src/index.ts","src/maintenance/MaintenanceErrorPage.ts","src/missing_route/MissingRouteErrorPage.ts","src/no_connection/NoConnectionErrorPage.ts","src/no_connection_panel/NoConnectionPanel.ts","src/unknown/UnknownErrorPage.ts","src/unsupported/UnsupportedErrorPage.ts","temp/pip-webui-errors-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","errors","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ErrorPageConfig","ErrorPageConfigs","Maintenance","Active","Name","Event","Title","SubTitle","Breadcrumb","Image","MissingRoute","NoConnection","Unknown","Unsupported","Params","SupportedBrowsers","edge","ie","firefox","opera","chrome","ErrorPageConfig_1","ErrorPageConfigService","config","_config","$inject","prototype","configurable","getErrorPageConfig","pageName","console","log","ErrorPageConfigProvider","configs","supported","setErrorPageConfig","_","defaultsDeep","setAllErrorPageConfigs","setSupportedBrowsers","browsers","$get","_service","provider","./ErrorPageConfig","3","clearErrorsDirective","restrict","link","ClearErrorsLink","$scope","$element","$attrs","$ctrls","_this","_fieldController","_formController","$watch","newValue","clearFieldErrors","clearFormErrors","$error","prop","hasOwnProperty","substring","$setValidity","$serverError","directive","Object","defineProperty","value","FormErrorsService","$rootScope","errorsWithHint","field","isEmpty","hint","touchedErrorsWithHint","form","$submitted","$touched","$dirty","result","resetFormErrors","$setPristine","$setUntouched","$setDirty","$setSubmitted","resetFieldsErrors","setFormError","error","errorFieldMap","data","status","errorName","message","goToUnhandledErrorPage","name","$emit","$stateProvider","state","url","params","controller","MaintenanceErrorPageController","controllerAs","templateUrl","initMaintenanceErrorPage","$state","pipErrorPageConfigService","$on","event","go","setMaintenanceErrorPageResources","$injector","has","get","pipTranslate","translations","ERROR_MAINTENANCE_TITLE","ERROR_MAINTENANCE_SUBTITLE","ERROR_MAINTENANCE_TRY_AGAIN","MaintenanceError","MaintenanceErrorConfig","MaintenanceErrorParams","interval","$mdMedia","_pageName","isCordova","pipMedia","pipNavService","media","appHeader","timeoutInterval","appbar","addShadow","icon","showMenu","breadcrumb","text","actions","hide","run","7","configureMissingRouteErrorPageRoute","unfoundState","fromState","MissingRouteErrorPageController","fromParams","preventDefault","to","setMissingRouteErrorPageResources","ERROR_MISSING_ROUTE_TITLE","ERROR_MISSING_ROUTE_SUBTITLE","ERROR_MISSING_ROUTE_CONTINUE","ERROR_MISSING_ROUTE_TRY_AGAIN","ERROR_MISSING_ROUTE_GO_BACK","ERROR_MISSING_ROUTE_PAGE_TITLE","MissingRouteErrorState","$location","href","toParams","absolute","urlBack","onContinue","angular","initMissingRouteErrorPage","configureNoConnectionErrorPageRoute","NoConnectionErrorPageController","initNoConnectionErrorPage","setNoConnectionErrorPageResources","ERROR_NO_CONNECTION_RETRY","ERROR_NO_CONNECTION_TITLE","ERROR_NO_CONNECTION_SUBTITLE","NoConnectionError","$window","errorConfig","onRetry","history","back","NoConnectionPanelController","_retry","isFunction","scope","retry","configureUnknownErrorPageRoute","UnknownErrorPageController","initUnknownErrorPage","setUnknownErrorPageResources","ERROR_UNKNOWN_TITLE","ERROR_UNKNOWN_SUBTITLE","ERROR_UNKNOWN_CLOSE","ERROR_UNKNOWN_DETAILS","UnknownErrorDetails","showError","parseError","error_details","server_stacktrace","client_stacktrace","onDetails","configureUnsupportedErrorPageRoute","UnsupportedErrorPageController","initUnsupportedErrorPage","pipSystemInfo","supportedVersions","browser","browserName","version","browserVersion","split","setUnsupportedErrorPageResources","ERROR_UNSUPPORTED_TITLE","ERROR_UNSUPPORTED_SUBTITLE","ERROR_UNSUPPORTED_O","ERROR_UNSUPPORTED_O_VER","ERROR_UNSUPPORTED_IE","ERROR_UNSUPPORTED_FM_VER","ERROR_UNSUPPORTED_IE_VER","ERROR_UNSUPPORTED_GC","ERROR_UNSUPPORTED_GC_VER","ERROR_UNSUPPORTED_FM","UnsupportedError","12","$templateCache","put"],"mappings":"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","file":"pip-webui-errors.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nexport class ErrorPageConfig {\n    Active: boolean;\n    Name: string;\n    Event: string;\n    Title: string;\n    SubTitle: String;\n    Breadcrumb: string;\n    Image: string;\n    Params?: any;\n}\n\nexport class ErrorPageConfigs {\n\n    Maintenance: ErrorPageConfig = {\n        Active: true,\n        Name: 'errors_maintenance',\n        Event: 'pipMaintenanceError',\n        Title: 'ERROR_MAINTENANCE_TITLE',\n        SubTitle: 'ERROR_MAINTENANCE_SUBTITLE',\n        Breadcrumb: 'ERROR_MAINTENANCE_TITLE',\n        Image: 'images/maintenance.svg'\n\n    };\n\n    MissingRoute: ErrorPageConfig = {\n        Active: true,\n        Name: 'errors_missing_route',\n        Event: '$stateNotFound',\n        Title: 'ERROR_MISSING_ROUTE_TITLE',\n        SubTitle: 'ERROR_MISSING_ROUTE_SUBTITLE',\n        Breadcrumb: 'ERROR_MISSING_ROUTE_PAGE_TITLE',\n        Image: 'images/invalid_route.svg'\n    };\n\n    NoConnection: ErrorPageConfig = {\n        Active: true,\n        Name: 'errors_no_connection',\n        Event: 'pipNoConnectionError',\n        Title: 'ERROR_NO_CONNECTION_TITLE',\n        SubTitle: 'ERROR_NO_CONNECTION_SUBTITLE',\n        Breadcrumb: 'ERROR_NO_CONNECTION_TITLE',\n        Image: 'images/no_response.svg'\n    };\n\n    Unknown: ErrorPageConfig = {\n        Active: true,\n        Name: 'errors_unknown',\n        Event: 'pipUnknownError',\n        Title: 'ERROR_UNKNOWN_TITLE',\n        SubTitle: 'ERROR_UNKNOWN_SUBTITLE',\n        Breadcrumb: 'ERROR_UNKNOWN_TITLE',\n        Image: 'images/unknown_error.svg'\n    };\n\n    Unsupported: ErrorPageConfig = {\n        Active: true,\n        Name: 'errors_unsupported',\n        Event: '',\n        Title: 'ERROR_UNSUPPORTED_TITLE',\n        SubTitle: 'ERROR_UNSUPPORTED_SUBTITLE',\n        Breadcrumb: 'ERROR_UNSUPPORTED_TITLE',\n        Image: '',\n        Params: {}\n    }\n}\n\nexport class SupportedBrowsers {\n    edge: number = 11;\n    ie: number = 11;\n    firefox: number = 43;\n    opera: number = 35;\n    chrome: number = 47;\n}\n","import { IErrorPageConfigService, IErrorPageConfigProvider } from './IErrorPageConfigService';\nimport { ErrorPageConfigs, ErrorPageConfig, SupportedBrowsers } from './ErrorPageConfig';\n\nclass ErrorPageConfigService implements IErrorPageConfigService {\n    private _config: ErrorPageConfigs;\n\n    public constructor(\n        config: ErrorPageConfigs\n    ) {\n        \"ngInject\";\n\n        this._config = config || new ErrorPageConfigs();\n    }\n\n    public get configs(): ErrorPageConfigs {\n        return this._config;\n    }\n\n    public getErrorPageConfig(pageName: string): ErrorPageConfig {\n        console.log(pageName, this._config);\n        if (!pageName || !this._config[pageName]) {\n            return null;\n        }\n\n        return this._config[pageName];\n    }\n\n}\n\nclass ErrorPageConfigProvider implements IErrorPageConfigProvider {\n    private _service: ErrorPageConfigService;\n    public configs: ErrorPageConfigs;\n\n    constructor() {\n        this.configs = new ErrorPageConfigs();\n        this.configs.Unsupported.Params.supported = new SupportedBrowsers();\n    }\n\n    public setErrorPageConfig(pageName: string, config: ErrorPageConfig): void {\n        if (!pageName || !config) return;\n        if (!this.configs[pageName]) return;\n\n        this.configs[pageName] = <ErrorPageConfig>_.defaultsDeep(config, this.configs[pageName]);\n    }\n\n    public setAllErrorPageConfigs(configs: ErrorPageConfigs): void {\n        if (!configs) return;\n\n        this.configs = <ErrorPageConfigs>_.defaultsDeep(configs, this.configs);\n    }\n\n    public setSupportedBrowsers(browsers: SupportedBrowsers): void {\n        this.configs.Unsupported.Params.supported = browsers;\n    }\n\n    public $get(): ErrorPageConfigService {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new ErrorPageConfigService(this.configs);\n        }\n\n        return this._service;\n    }\n}\n\n(() => {\n    angular\n        .module('pipErrorPageConfigService', [])\n        .provider('pipErrorPageConfigService', ErrorPageConfigProvider);\n\n})();\n","(() => {\n\n    class ClearErrorsLink {\n        private _fieldController: any;\n        private _formController: any;\n\n        constructor(\n            $scope: ng.IScope,\n            $element: ng.IRootElementService,\n            $attrs: ng.IAttributes,\n            $ctrls\n        ) {\n            this._fieldController = $ctrls[0];\n            this._formController = $ctrls[1];\n\n            $scope.$watch($attrs['ngModel'], (newValue) => {\n                this.clearFieldErrors();\n                this.clearFormErrors();\n            });\n        }\n\n        private clearFieldErrors() {\n            let errors = this._fieldController.$error;\n\n            for (let prop in errors) {\n                if (errors.hasOwnProperty(prop) && prop.substring(0, 6) == 'ERROR_') {\n                    this._fieldController.$setValidity(prop, true);\n                }\n            }\n        }\n\n        private clearFormErrors() {\n            this._formController.$serverError = {};\n        }\n    }\n\n    function clearErrorsDirective() {\n        return {\n            restrict: 'A',\n            require: ['ngModel', '^?form'],\n            link: ClearErrorsLink\n        };\n    }\n\n    angular\n        .module('pipClearErrors', [])\n        .directive('pipClearErrors', clearErrorsDirective);\n})();","import { IFormErrorsService } from './IFormErrorsService';\n\nclass FormErrorsService {\n\n    constructor(private $rootScope: ng.IRootScopeService) { }\n\n    public errorsWithHint(field: any) {\n        if (field == null) return;\n\n        return _.isEmpty(field.$error) ? { hint: true } : field.$error;\n    };\n\n    public touchedErrorsWithHint(form: ng.IFormController, field: any) {\n        if (form == null) return;\n        if (field == null) return;\n\n        if (form.$submitted && (field.$touched || form.$dirty) || !form.$submitted && (field.$touched || field.$dirty)) {\n            let result = _.isEmpty(field.$error) ? { hint: true } : field.$error;\n            return result;\n        }\n        return { hint: true };\n    }\n\n    public resetFormErrors(form: ng.IFormController, errors?: boolean): void {\n        form.$setPristine();\n        form.$setUntouched();\n\n        if (errors) {\n            form.$setDirty();\n            form.$setSubmitted();\n        }\n\n        form['$serverError'] = {};\n    }\n\n    public resetFieldsErrors(form: ng.IFormController, field: any): void {\n        if (!form) return;\n        if (field && form[field] && form[field].$error) {\n            form[field].$error = {};\n        } else {\n            for (let prop in form) {\n                if (form[prop] && form[prop].$error) {\n                    form[prop].$error = {};\n                }\n            }\n            if (form && form.$error) {\n                form.$error = {};\n            }\n        }\n    }\n\n    public setFormError(form: ng.IFormController, error, errorFieldMap) {\n        if (error == null) return;\n        // Prepare form server errors\n        form['$serverError'] = form['$serverError'] || {};\n        // Prepare error code\n        let code: string = error.code || (error.data || {}).code || null;\n        if (!code && error.status) code = error.status;\n\n        if (code) {\n            let errorName = 'ERROR_' + code,\n                field = errorFieldMap ? errorFieldMap[code] : null;\n            // Set server error to fields\n            if (field && form[field] && form[field].$setValidity) {\n                form[field].$setValidity(errorName, false);\n                return;\n            }\n\n            // Set server error to form\n            if (field == 'form') {\n                form['$serverError'][errorName] = true;\n                return;\n            }\n        }\n\n        // if undefined error for this form or code === undefined/null, go to unhandled error page\n        if (error.data && error.data.message) {\n            form['$serverError']['ERROR_UNKNOWN'] = error.data.message;\n            this.goToUnhandledErrorPage(error);\n            return;\n        }\n\n        // Set as undefined error\n        if (error.message) {\n            form['$serverError']['ERROR_UNKNOWN'] = error.message;\n            this.goToUnhandledErrorPage(error);\n            return;\n        }\n\n        if (error.name) {\n            form['$serverError']['ERROR_UNKNOWN'] = error.name;\n            this.goToUnhandledErrorPage(error);\n            return;\n        }\n\n\n        form['$serverError']['ERROR_UNKNOWN'] = error;\n        this.goToUnhandledErrorPage(error);\n    }\n\n    private goToUnhandledErrorPage(error) {\n        this.$rootScope.$emit('pipUnhandledInternalError', {\n            error: error\n        });\n    }\n}\n\n(() => {\n\n    angular\n        .module('pipFormErrors', [])\n        .service('pipFormErrors', FormErrorsService);\n\n})();","﻿angular\n    .module('pipErrors.Pages', [\n        'ngMaterial'\n    ]);\n\nimport './maintenance/MaintenanceErrorPage';\nimport './missing_route/MissingRouteErrorPage';\nimport './no_connection/NoConnectionErrorPage';\nimport './unknown/UnknownErrorPage';\nimport './unsupported/UnsupportedErrorPage';\n\nimport './error_pages/ErrorPageConfigService';\nimport './no_connection_panel/NoConnectionPanel';\nimport './form_errors/ClearErrorsDirective';\nimport './form_errors/FormErrorsService';\n\nangular\n    .module('pipErrors', [\n        'pipErrors.Templates',\n        'pipErrors.Pages',\n        'pipErrorPageConfigService',\n        'pipNoConnectionPanel',\n        'pipClearErrors',\n        'pipFormErrors'\n    ]);\n\nexport * from './error_pages/ErrorPageConfig';\nexport * from './error_pages/IErrorPageConfigService';","\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\n\nclass MaintenanceError {\n    config?: MaintenanceErrorConfig;\n}\n\nclass MaintenanceErrorConfig {\n    params?: MaintenanceErrorParams;\n}\n\nclass MaintenanceErrorParams {\n    interval?: number = 0;\n}\n\nclass MaintenanceErrorPageController {\n    private _pageName: string = 'Maintenance';\n    private pipNavService;\n\n    public config: ErrorPageConfig;\n    public isCordova: boolean = false;\n    public media;\n    public error: MaintenanceError;\n    public timeoutInterval: number;\n\n    constructor(\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        pipErrorPageConfigService: IErrorPageConfigService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.config = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\n\n        this.media = pipMedia ? pipMedia : $mdMedia;\n\n        $rootScope['$routing'] = false;\n        this.appHeader();\n\n        this.error = $state && $state.params && $state.params['error'] ? $state.params['error'] : {};\n        this.timeoutInterval = this.error && this.error.config &&\n            this.error.config.params && this.error.config.params.interval ? this.error.config.params.interval : 0;\n\n    }\n\n    private appHeader(): void {\n        if (!this.pipNavService) return;\n\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = this.config.Breadcrumb;\n        this.pipNavService.actions.hide();\n    }\n}\n\nfunction configureMaintenanceErrorPageRoute(\n    $stateProvider: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n            .state('errors_maintenance', {\n                url: '/errors/maintenance',\n                params: {\n                    error: null\n                },\n                controller: MaintenanceErrorPageController,\n                controllerAs: '$ctrl',\n                templateUrl: 'maintenance/MaintenanceErrorPage.html'\n            });\n}\n\nfunction initMaintenanceErrorPage(\n    $rootScope: ng.IRootScopeService, \n    $state: ng.ui.IStateService, \n    pipErrorPageConfigService: IErrorPageConfigService\n) {\n    \"ngInject\";\n\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\n\n    if (!config.Maintenance.Active) return;\n\n    $rootScope.$on('pipMaintenanceError',\n    (event: angular.IAngularEvent, params) => { \n        this.$state.go('errors_maintenance', params);\n    });\n}\n\nfunction setMaintenanceErrorPageResources($injector: angular.auto.IInjectorService) {\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n    if (pipTranslate == null) return;\n\n    // Set translation strings for the module\n    pipTranslate.translations('en', {\n        'ERROR_MAINTENANCE_TITLE': 'The server is on maintenance',\n        'ERROR_MAINTENANCE_SUBTITLE': 'Sorry for the inconvenience. This application is undergoing maintenance for ' +\n        'a short period. We\\'ll be back soon. Thank for your patience.',\n        'ERROR_MAINTENANCE_CLOSE': 'Close',\n        'ERROR_MAINTENANCE_TRY_AGAIN': 'Try after'\n    });\n\n    pipTranslate.translations('ru', {\n        'ERROR_MAINTENANCE_TITLE': 'The server is on maintenance',\n        'ERROR_MAINTENANCE_SUBTITLE': 'Sorry for the inconvenience. This application is undergoing maintenance for ' +\n        'a short period. We\\'ll be back soon. Thank for your patience.',\n        'ERROR_MAINTENANCE_CLOSE': 'Close',\n        'ERROR_MAINTENANCE_TRY_AGAIN': 'Try after'\n    });\n}\n\n(() => {\n\n    angular\n        .module('pipErrors.Pages')\n        .config(configureMaintenanceErrorPageRoute)\n        .run(initMaintenanceErrorPage)\n        .run(setMaintenanceErrorPageResources);\n\n})();\n","import { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\n\nclass MissingRouteErrorState {\n    to: string;\n    toParams: any;\n    fromParams: any;\n}\n\nclass MissingRouteErrorPageController {\n    private _pageName: string = 'MissingRoute';\n    private pipNavService;\n\n    public config: ErrorPageConfig;\n    public isCordova: boolean = false;\n    public media;\n    public fromState: MissingRouteErrorState;\n    public unfoundState: MissingRouteErrorState;\n    public url: string;\n    public urlBack: string;\n\n    constructor(\n        $scope: ng.IScope,\n        private $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        pipErrorPageConfigService: IErrorPageConfigService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.config = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\n\n        this.media = pipMedia ? pipMedia : $mdMedia;\n\n        $rootScope['$routing'] = false;\n        this.appHeader();\n\n        this.fromState = $state && $state.params && $state.params['fromState'] ? $state.params['fromState'] : {};\n        this.unfoundState = $state && $state.params ? $state.params['unfoundState'] : {};\n        this.url = this.unfoundState && this.unfoundState.to ? $state.href(this.unfoundState.to, this.unfoundState.toParams, { absolute: true }) : '';\n        this.urlBack = this.fromState && this.fromState.to ? $state.href(this.fromState.to, this.fromState.fromParams, { absolute: true }) : '';\n\n    }\n\n    private appHeader(): void {\n        if (!this.pipNavService) return;\n\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = this.config.Breadcrumb;\n        this.pipNavService.actions.hide();\n    }\n\n    public onContinue() {\n        this.$location.url('/');\n    }\n}\n\nfunction configureMissingRouteErrorPageRoute(\n    $stateProvider: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n    $stateProvider\n        .state('errors_missing_route', {\n            url: '/errors/missing_route',\n            params: {\n                unfoundState: null,\n                fromState: null\n            },\n            controller: MissingRouteErrorPageController,\n            controllerAs: '$ctrl',\n            templateUrl: 'missing_route/MissingRouteErrorPage.html'\n        });\n}\n\n\nfunction initMissingRouteErrorPage(\n    $rootScope: ng.IRootScopeService,\n    $state: ng.ui.IStateService,\n    $injector: angular.auto.IInjectorService,\n    pipErrorPageConfigService: IErrorPageConfigService\n) {\n    \"ngInject\";\n\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\n\n    if (!config.MissingRoute.Active) return;\n\n    $rootScope.$on('$stateNotFound',\n        (\n            event: angular.IAngularEvent,\n            unfoundState: ng.ui.IState,\n            fromState: ng.ui.IState,\n            fromParams: any) => {\n            event.preventDefault();\n\n            $state.go('errors_missing_route', {\n                unfoundState: unfoundState,\n                fromState: {\n                    to: fromState ? fromState.name : '',\n                    fromParams: fromParams\n                }\n            }\n            );\n            $rootScope['$routing'] = false;\n        }\n    );\n}\n\nfunction setMissingRouteErrorPageResources($injector: angular.auto.IInjectorService) {\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n    if (pipTranslate == null) return;\n\n    // Set translation strings for the module\n    pipTranslate.translations('en', {\n        'ERROR_MISSING_ROUTE_TITLE': 'Sorry, the page isn\\'t available',\n        'ERROR_MISSING_ROUTE_SUBTITLE': 'The link you followed may be broken, or the page may have been removed.',\n        'ERROR_MISSING_ROUTE_CONTINUE': 'Continue',\n        'ERROR_MISSING_ROUTE_TRY_AGAIN': 'Try again',\n        'ERROR_MISSING_ROUTE_GO_BACK': 'Go Back',\n        'ERROR_MISSING_ROUTE_PAGE_TITLE': 'Wrong page'\n    });\n\n    pipTranslate.translations('ru', {\n        'ERROR_MISSING_ROUTE_TITLE': 'Sorry, the page isn\\'t available',\n        'ERROR_MISSING_ROUTE_SUBTITLE': 'The link you followed may be broken, or the page may have been removed.',\n        'ERROR_MISSING_ROUTE_CONTINUE': 'Continue',\n        'ERROR_MISSING_ROUTE_TRY_AGAIN': 'Try again',\n        'ERROR_MISSING_ROUTE_GO_BACK': 'Go Back',\n        'ERROR_MISSING_ROUTE_PAGE_TITLE': 'Wrong page'\n    });\n}\n\n(() => {\n\n    angular\n        .module('pipErrors.Pages')\n        .config(configureMissingRouteErrorPageRoute)\n        .run(initMissingRouteErrorPage)\n        .run(setMissingRouteErrorPageResources);\n\n})();\n","\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\n\nclass NoConnectionError {\n    config?: any;\n}\n\nclass NoConnectionErrorPageController {\n    private _pageName: string = 'NoConnection';\n    private pipNavService;\n\n    public errorConfig: ErrorPageConfig;\n    public isCordova: boolean = false;\n    public media;\n    public error: NoConnectionError;\n\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        pipErrorPageConfigService: IErrorPageConfigService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.errorConfig = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\n\n        this.media = pipMedia ? pipMedia : $mdMedia;\n\n        $rootScope['$routing'] = false;\n        this.appHeader();\n\n        this.error = $state && $state.params && $state.params['error'] ? $state.params['error'] : {};\n\n    }\n\n    private appHeader(): void {\n        if (!this.pipNavService) return;\n\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = this.errorConfig.Breadcrumb;\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureNoConnectionErrorPageRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('errors_no_connection', {\n            url: '/errors/no_connection',\n            params: {\n                error: null\n            },\n            controller: NoConnectionErrorPageController,\n            controllerAs: '$ctrl',\n            templateUrl: 'no_connection/NoConnectionErrorPage.html'\n        });\n}\n\nfunction initNoConnectionErrorPage(\n    $rootScope: ng.IRootScopeService,\n    $state: ng.ui.IStateService,\n    pipErrorPageConfigService: IErrorPageConfigService\n) {\n    \"ngInject\";\n\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\n\n    if (!config.NoConnection.Active) return;\n\n\n    $rootScope.$on('pipNoConnectionError',\n        (event: angular.IAngularEvent, params) => {\n            this.$state.go('errors_no_connection', params);\n        });\n}\n\nfunction setNoConnectionErrorPageResources($injector: angular.auto.IInjectorService) {\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n    if (pipTranslate == null) return;\n\n    // Set translation strings for the module\n    pipTranslate.translations('en', {\n        'ERROR_NO_CONNECTION_TITLE': 'No connection to the server',\n        'ERROR_NO_CONNECTION_SUBTITLE': 'Unable to connect to the server. Check your Internet connection and try again.',\n        'ERROR_NO_CONNECTION_RETRY': 'Retry',\n    });\n\n    pipTranslate.translations('ru', {\n        'ERROR_NO_CONNECTION_TITLE': 'No connection to the server',\n        'ERROR_NO_CONNECTION_SUBTITLE': 'Unable to connect to server. Check your Internet connection and try again.',\n        'ERROR_NO_CONNECTION_RETRY': 'Retry',\n    });\n}\n\n(() => {\n\n    angular\n        .module('pipErrors.Pages')\n        .config(configureNoConnectionErrorPageRoute)\n        .run(initNoConnectionErrorPage)\n        .run(setNoConnectionErrorPageResources);\n\n})();\n","(() => {\n\n    class NoConnectionPanelController {\n        private _retry: Function;\n        public error: any;\n        constructor($scope: ng.IScope) {\n            this._retry = $scope['retry'];\n            this.error = $scope['error'];\n        }\n\n        public onRetry() {\n            if (this._retry && angular.isFunction(this._retry)) this._retry();\n        }\n    }\n\n    angular\n        .module(\"pipNoConnectionPanel\", [])\n        .directive('pipNoConnectionPanel',\n        () => {\n            return {\n                restrict: 'E',\n                scope: {\n                    error: '=pipError',\n                    retry: '=pipRetry'\n                },\n                templateUrl: 'no_connection_panel/NoConnectionPanel.html',\n                controller: NoConnectionPanelController,\n                controllerAs: '$ctrl'\n            };\n        }\n        )\n\n})();\n\n","\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\n\nclass UnknownErrorDetails {\n    code: number;\n    message: string;\n    status: string;\n    server_stacktrace: Function;\n    client_stacktrace: Function;\n}\n\nclass UnknownErrorPageController {\n    private _pageName: string = 'Unknown';\n    private pipNavService;\n\n    public config: ErrorPageConfig;\n    public isCordova: boolean = false;\n    public media;\n    public error: UnknownErrorDetails;\n    public error_details: UnknownErrorDetails;\n    public showError: boolean;\n\n    constructor(\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService, \n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia, \n        $injector: angular.auto.IInjectorService,  \n        pipErrorPageConfigService: IErrorPageConfigService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.config = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\n\n        this.media = pipMedia ? pipMedia : $mdMedia;\n\n        $rootScope['$routing'] = false;\n        this.showError = $scope['showError'];\n        this.appHeader();\n\n        this.error = $state && $state.params && $state.params['error'] ?  $state.params['error'] : {};\n        \n        this.parseError();\n\n    }\n\n    private appHeader(): void {\n        if (!this.pipNavService) return;\n\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = this.config.Breadcrumb;\n        this.pipNavService.actions.hide();\n    }\n\n    private parseError() {\n        this.error_details = new UnknownErrorDetails();\n        this.error_details.code = this.error.code;\n        this.error_details.message = this.error.message;\n        this.error_details.status = this.error.status;\n\n        this.error_details.server_stacktrace = () => {};\n\n        this.error_details.client_stacktrace = () => {};\n    }\n\n    public onDetails() {\n        this.showError = true;\n    }\n\n}\n\nfunction configureUnknownErrorPageRoute (\n    $injector: angular.auto.IInjectorService, \n    $stateProvider: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n            .state('errors_unknown', {\n                url: '/errors/unknown',\n                params: {\n                    error: null\n                }, \n                controllerAs: '$ctrl',\n                controller: UnknownErrorPageController,\n                templateUrl: 'unknown/UnknownErrorPage.html'\n            });\n}\n\nfunction initUnknownErrorPage(\n    $rootScope: ng.IRootScopeService, \n    $state: ng.ui.IStateService, \n    pipErrorPageConfigService: IErrorPageConfigService\n) {\n    \"ngInject\";\n\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\n\n    if (!config.Unknown.Active) return;\n\n    $rootScope.$on('pipUnknownError',\n    (event: angular.IAngularEvent, params) => { \n        this.$state.go('errors_unknown', params);\n    });\n}\n\nfunction setUnknownErrorPageResources($injector: angular.auto.IInjectorService) {\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n    if (pipTranslate == null) return;\n\n    // Set translation strings for the module\n    pipTranslate.translations('en', {\n        'ERROR_UNKNOWN_TITLE': 'Oops. Something went wrong',\n        'ERROR_UNKNOWN_SUBTITLE': 'Unknown error occurred, but don\\'t worry we already have been notified.',\n        'ERROR_UNKNOWN_CLOSE': 'Close',\n        'ERROR_UNKNOWN_DETAILS': 'Details',\n    });\n\n    pipTranslate.translations('ru', {\n        'ERROR_UNKNOWN_TITLE': 'Oops. Something went wrong',\n        'ERROR_UNKNOWN_SUBTITLE': 'Unknown error occurred, but don\\'t worry we already have been notified.',\n        'ERROR_UNKNOWN_CLOSE': 'Close',\n        'ERROR_UNKNOWN_DETAILS': 'Details',\n    });\n}\n\n(() => {\n\n    angular\n        .module('pipErrors.Pages')\n        .config(configureUnknownErrorPageRoute)\n        .run(initUnknownErrorPage)\n        .run(setUnknownErrorPageResources);\n\n})();\n","\nimport { IErrorPageConfigService } from '../error_pages/IErrorPageConfigService';\nimport { ErrorPageConfigs, ErrorPageConfig } from '../error_pages/ErrorPageConfig';\n\nclass UnsupportedError {\n    config?: any;\n}\n\nclass UnsupportedErrorPageController {\n    private _pageName: string = 'Unsupported';\n    private pipNavService;\n\n    public errorConfig: ErrorPageConfig;\n    public isCordova: boolean = false;\n    public media;\n    public error: UnsupportedError;\n\n    constructor(\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        pipErrorPageConfigService: IErrorPageConfigService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.errorConfig = pipErrorPageConfigService.getErrorPageConfig(this._pageName);\n        this.pipNavService = $injector.has('pipNavService') ? $injector.get('pipNavService') : null;\n\n        this.media = pipMedia ? pipMedia : $mdMedia;\n\n        $rootScope['$routing'] = false;\n        this.appHeader();\n\n        this.error = $state && $state.params && $state.params['error'] ? $state.params['error'] : {};\n\n    }\n\n    private appHeader(): void {\n        if (!this.pipNavService) return;\n\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = this.errorConfig.Breadcrumb;\n        this.pipNavService.actions.hide();\n    }\n}\n\nfunction configureUnsupportedErrorPageRoute(\n    $stateProvider: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('errors_unsupported', {\n            url: '/errors/unsupported',\n            params: {\n                error: null\n            },\n            controllerAs: '$ctrl',\n            controller: UnsupportedErrorPageController,\n            templateUrl: 'unsupported/UnsupportedErrorPage.html'\n        });\n}\n\nfunction initUnsupportedErrorPage(\n    $rootScope: ng.IRootScopeService,\n    $state: ng.ui.IStateService,\n    $injector: angular.auto.IInjectorService,\n    pipErrorPageConfigService: IErrorPageConfigService) {\n    \"ngInject\";\n\n    let config: ErrorPageConfigs = pipErrorPageConfigService.configs;\n\n    if (!config.Unsupported.Active) return;\n\n    let pipSystemInfo: any = $injector.has('pipSystemInfo') ? $injector.get('pipSystemInfo') : null;\n    if (!pipSystemInfo) { return; }\n\n    let supportedVersions = config.Unsupported.Params.supported;\n\n    let browser: string = pipSystemInfo.browserName;\n    let version: string = pipSystemInfo.browserVersion;\n    version = version.split(\".\")[0]\n\n    if (browser\n        && supportedVersions[browser]\n        && version >= supportedVersions[browser]) {\n        return;\n    }\n    // if not supported\n    this.$state.go('errors_unsupported');\n}\n\nfunction setUnsupportedErrorPageResources($injector: angular.auto.IInjectorService) {\n    let pipTranslate: any = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n    if (pipTranslate == null) return;\n\n    // Set translation strings for the module\n    pipTranslate.translations('en', {\n        'ERROR_UNSUPPORTED_TITLE': 'This browser is not supported',\n        'ERROR_UNSUPPORTED_SUBTITLE': 'Our application using the latest technology. This makes the application faster ' +\n        'and easier to use. Unfortunately, your browser doesn\\'t support those ' +\n        'technologies. Download one of these great browsers and you\\'ll be on your way:',\n        'ERROR_UNSUPPORTED_O': 'Opera',\n        'ERROR_UNSUPPORTED_O_VER': 'Version 36+',\n        'ERROR_UNSUPPORTED_IE': 'Internet Explorer',\n        'ERROR_UNSUPPORTED_IE_VER': 'Version 11+',\n        'ERROR_UNSUPPORTED_GC': 'Google Chrome',\n        'ERROR_UNSUPPORTED_GC_VER': 'Version 48+',\n        'ERROR_UNSUPPORTED_FM': 'Mozilla Firefox',\n        'ERROR_UNSUPPORTED_FM_VER': 'Version 45+'\n\n    });\n\n    pipTranslate.translations('ru', {\n        'ERROR_UNSUPPORTED_TITLE': 'This browser is not supported',\n        'ERROR_UNSUPPORTED_SUBTITLE': 'Our application using the latest technology. This makes the application faster ' +\n        'and easier to use. Unfortunately, your browser doesn\\'t support those ' +\n        'technologies. Download one of these great browsers and you\\'ll be on your way:',\n        'ERROR_UNSUPPORTED_O': 'Opera',\n        'ERROR_UNSUPPORTED_O_VER': 'Version 35+',\n        'ERROR_UNSUPPORTED_IE': 'Internet Explorer',\n        'ERROR_UNSUPPORTED_IE_VER': 'Version 11+',\n        'ERROR_UNSUPPORTED_GC': 'Google Chrome',\n        'ERROR_UNSUPPORTED_GC_VER': 'Version 47+',\n        'ERROR_UNSUPPORTED_FM': 'Mozilla Firefox',\n        'ERROR_UNSUPPORTED_FM_VER': 'Version 43+'\n\n    });\n}\n\n(() => {\n    angular\n        .module('pipErrors.Pages')\n        .config(configureUnsupportedErrorPageRoute)\n        .run(initUnsupportedErrorPage)\n        .run(setUnsupportedErrorPageResources);\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('maintenance/MaintenanceErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.config.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::\\'ERROR_MAINTENANCE_TITLE\\' | translate}}</div><div class=\"pip-error-subtext\">{{::\\'ERROR_MAINTENANCE_SUBTITLE\\' | translate}}</div><div class=\"pip-error-subtext\" ng-if=\"$ctrl.timeoutInterval\">{{::\\'ERROR_MAINTENANCE_TRY_AGAIN\\' | translate}} {{timeoutInterval}} sec.</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\" ng-if=\"$ctrl.isCordova\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onClose($event)\" aria-label=\"CLOSE\">{{::\\'ERROR_MAINTENANCE_CLOSE\\' | translate}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('missing_route/MissingRouteErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.config.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.config.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.config.SubTitle | translate}}</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\"><md-button aria-label=\"CONTINUE\" class=\"md-accent\" ng-click=\"$ctrl.onContinue($event)\">{{::\\'ERROR_MISSING_ROUTE_CONTINUE\\' | translate}}</md-button></div><div class=\"h48\" ng-if=\"url\"><a ng-href=\"{{$ctrl.url}}\">{{::\\'ERROR_MISSING_ROUTE_TRY_AGAIN\\' | translate }}: {{$ctrl.url}}</a></div><div class=\"h48\" ng-if=\"urlBack\"><a ng-href=\"{{$ctrl.urlBack}}\">{{::\\'ERROR_MISSING_ROUTE_GO_BACK\\' | translate }}: {{$ctrl.urlBack}}</a></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('no_connection/NoConnectionErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.errorConfig.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.errorConfig.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.errorConfig.SubTitle | translate}}</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\"><md-button aria-label=\"RETRY\" class=\"md-accent\" ng-click=\"$ctrl.onRetry($event)\">{{::\\'ERROR_NO_CONNECTION_RETRY\\' | translate}}</md-button></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('no_connection_panel/NoConnectionPanel.html',\n    '<div class=\"pip-error-page pip-error layout-column layout-align-center-center flex\"><img src=\"{{$ctrl.error.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.error.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.error.SubTitle | translate}}</div><div class=\"pip-error-actions h48 layout-column layout-align-center-center\"><md-button aria-label=\"RETRY\" class=\"md-accent\" ng-click=\"$ctrl.onRetry($event)\">{{::\\'ERROR_NO_CONNECTION_RETRY\\' | translate}}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('unknown/UnknownErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><img src=\"{{$ctrl.config.Image}}\" class=\"pip-pic block\"><div class=\"pip-error-text\">{{::$ctrl.config.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.config.SubTitle | translate}}</div><div class=\"pip-error-subtext\" ng-if=\"$ctrl.showError && $ctrl.error_details && $ctrl.error_details.message\"><div ng-if=\"$ctrl.error_details.code\">Code: {{$ctrl.error_details.code}}</div><div ng-if=\"$ctrl.error_details.message\">Description: {{$ctrl.error_details.message}}</div><div ng-if=\"$ctrl.error_details.status\">HTTP status: {{$ctrl.error_details.status}}</div><div ng-if=\"$ctrl.error_details.server_stacktrace\">Server stacktrace: {{$ctrl.error_details.server_stacktrace}}</div><div ng-if=\"$ctrl.error_details.client_stacktrace\">Client stacktrace stacktrace: {{$ctrl.error_details.client_stacktrace}}</div></div><div class=\"pip-error-actions layout-column layout-align-center-center\"><div class=\"h48\" ng-if=\"$ctrl.isCordova\"><md-button aria-label=\"CLOSE\" class=\"md-accent\" ng-click=\"$ctrl.onClose($event)\">{{::\\'ERROR_UNKNOWN_CLOSE\\' | translate}}</md-button></div><div class=\"h48\" ng-if=\"$ctrl.error_details && $ctrl.error_details.status\"><md-button aria-label=\"DETAILS\" class=\"md-accent\" ng-click=\"$ctrl.onDetails($event)\">{{::\\'ERROR_UNKNOWN_DETAILS\\' | translate}}</md-button></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipErrors.Templates');\n} catch (e) {\n  module = angular.module('pipErrors.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('unsupported/UnsupportedErrorPage.html',\n    '<div class=\"pip-error-scroll-body pip-scroll\"><div class=\"pip-error pip-error-page layout-column flex layout-align-center-center\"><div class=\"pip-error-text\">{{::$ctrl.errorConfig.Title | translate}}</div><div class=\"pip-error-subtext\">{{::$ctrl.errorConfig.SubTitle | translate}}</div><div class=\"pip-error-details layout-row layout-align-center-center\" ng-if=\"$ctrl.media(\\'gt-xs\\')\"><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/ie.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.microsoft.com/en-us/download/internet-explorer-11-for-windows-7-details.aspx\">{{::\\'ERROR_UNSUPPORTED_IE\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_IE_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/fm.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.mozilla.org/ru/firefox/new/\">{{::\\'ERROR_UNSUPPORTED_FM\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_FM_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/gc.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.google.com/chrome/browser/desktop/index.html?platform=win64#\">{{::\\'ERROR_UNSUPPORTED_GC\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_GC_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/o.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"http://www.opera.com/ru/download\">{{::\\'ERROR_UNSUPPORTED_O\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_O_VER\\' | translate}}</p></div></div></div><div class=\"pip-error-details\" ng-if=\"$ctrl.media(\\'xs\\')\"><div class=\"layout-row layout-align-center-center\"><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/ie.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.microsoft.com/en-us/download/internet-explorer-11-for-windows-7-details.aspx\">{{::\\'ERROR_UNSUPPORTED_IE\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_IE_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/fm.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.mozilla.org/ru/firefox/new/\">{{::\\'ERROR_UNSUPPORTED_FM\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_FM_VER\\' | translate}}</p></div></div></div><div class=\"tm16 layout-row layout-align-center-center\"><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/gc.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"https://www.google.com/chrome/browser/desktop/index.html?platform=win64#\">{{::\\'ERROR_UNSUPPORTED_GC\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_GC_VER\\' | translate}}</p></div></div><div class=\"pip-error-details-item layout-column layout-align-center-center\"><div style=\"background-image: url(\\'images/o.svg\\');\" class=\"pip-pic\"></div><div class=\"h64 tp16 bp16\"><a class=\"text-body2 m0\" target=\"_blank\" href=\"http://www.opera.com/ru/download\">{{::\\'ERROR_UNSUPPORTED_O\\' | translate}}</a><p class=\"text-body1 m0\">{{::\\'ERROR_UNSUPPORTED_O_VER\\' | translate}}</p></div></div></div></div></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-errors-html.min.js.map\n"]}